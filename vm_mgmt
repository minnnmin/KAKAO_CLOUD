#!/bin/bash

temp=$(mktemp -t test.XXX)      # 함수 내에서 결과를 파일로 저장하기 위함
ans=$(mktemp -t test.XXX)       # 메뉴에서 선택한 번호를 담기 위한 파일
image=$(mktemp -t test.XXX)     # 템플릿 이미지를 담기 위한 파일
vmname=$(mktemp -t test.XXX)    # 가상머신 이름을 담기 위한 파일
flavor=$(mktemp -t test.XXX)    # CPU/RAM 세트인 flavor 정보를 담기 위한 파일

# 가상머신 리스트 출력
vmlist(){
        virsh list --all > $temp        # --all 옵션이 없으면, 동작중인 vm만 출력
        dialog --textbox $temp 20 50
}

# 가상 네트워크 리스트 출력
vmnetlist(){
        virsh net-list --all > $temp
        dialog --textbox $temp 20 50
}

# 가상머신 생성 함수
vmcreation(){
        #  os 선택   =>   vm 이름  =>  flavor (CPU/RAM)  => 설치
        # radiolist  =>  inputbox  =>  radiolist

        dialog --title "이미지 선택" --radiolist "베이스 이미지를 선택하세요" 15 50 5 "CentOS7" "CentOS Version 7.0" ON "Ubuntu" "Ubuntu Linux version 18.04" OFF "RHEL7" "Red Hat Enterprise Linux version 7.0" OFF 2> $image

        vmimage=$(cat $image)
        case $vmimage in
        CentOS7)
                os=/cloud/CentOS7-Base.qcow2 ;;
        Ubuntu)
                os=/cloud/Ubuntu-Base.qcow2 ;;
        RHEL7)
                os=/cloud/RHEL7-base.qcow2 ;;
        *)
                dialog --msgbox "잘못된 선택입니다" 10 40 ;;
        esac
				# os 선택이 정상적으로 처리되면 인스턴스 이름 입력하기로 이동
        if [ $? -eq 0 ]
        then
                dialog --title "인스턴스 이름" --inputbox "인스턴스의 이름을 입력하세요: " 10 50 2> $vmname
                name=$(cat $vmname)

                # 종료코드가 0(ok)인 경우, flavor 선택으로 이동
                if [ $? -eq 0 ]
                then
                        dialog --title "스펙 선택" --radiolist "필요한 자원을 선택하세 " 15 50 5 "m1.small" "가상 CPU 1개, 메모리 1GB" ON  "m1.medium" "가상 CPU 2개, 메모리 2GB" OFF  "m1.large" "가상 CPU 4개, 메모리 8GB" OFF 2> $flavor

                        # flavor에 따라 CPU개수, MEM 사이즈 입력
                        spec=$(cat $flavor)
                        case $spec in
                        m1.small)
                                vcpus=1
                                ram=1024
                                dialog --msgbox "CPU: ${vcpus}core(s), RAM: ${ram}MB" 10 50 ;;
                        m1.medium)
                                vcpus=2
                                ram=2048
                                dialog --msgbox "CPU: ${vcpus}core(s), RAM: ${ram}MB" 10 50 ;;
                        m1.large)
                                vcpus=4
                                ram=8192
                                dialog --msgbox "CPU: ${vcpus}core(s), RAM: ${ram}MB" 10 50 ;;
                        esac

                        # 종료코드가 0인 경우 설치 진행
                        if [ $? -eq 0 ]
                        then
                                cp /cloud/CentOS7-Base.qcow2 /cloud/$name.qcow2
                                virt-install --name $name --vcpus $vcpus --memory $ram --disk /cloud/$name.qcow2 --import --network network:default,model=virtio --os-type linux --os-variant rhel7.0 --noautoconsole > /dev/null
                                dialog --msgbox "설치가 시작되었습니다" 10 50

                        fi
                fi
        fi
}

# 가상머신 삭제
vmremoval(){
        rmfile=$(mktemp -t test.XXX)
        rmnamefile=$(mktemp -t test.XXX)
        i=1
        virsh list --all | grep -v Id | grep -v - | gawk '{print $2}' > $rmfile
        sed '$ d' -i $rmfile

        if [ -s $rmfile ]
        then
                dialog --radiolist "삭제할 가상머신을 선택하세요" 15 50 5 \
                        $(for vm in $(cat $rmfile)
                          do
                                if [ $i -eq 1 ]
                                then
                                        echo "\"$vm\" \"vm$i\" ON "
                                        (( i++ ))
                                else
                                        echo "\"$vm\" \"vm$i\" OFF "
                                        (( i++ ))
                                fi
                          done) \
                2> $rmnamefile
                rmname=`cat $rmnamefile`
                dialog --yesno "$rmname 삭제하시겠습니까?" 10 20
                res=`echo $?`
                if [ $res == "0" ]
                then
                        #dialog --msgbox "삭제할게요" 10 20
                        rmname=${rmname#\"}
                        rmname=${rmname%\"}
                        virsh destroy $rmname
                        virsh undefine $rmname --remove-all-storage
                else
                        echo "삭제를 취소했습니다"
                        break
                fi
        else
                echo "empty"
        fi
}

# 메인코드
while [ 1 ]
do
        # 메인메뉴 출력하기
        dialog --menu "KVM 관리 시스템" 20 40 8 1 "가상머신 리스트" 2 "가상네트워크 리스트" 3 "가상머신 생성" 4 "가상머신 삭제" 0 "종료" 2> $ans

        # 종료코드 확인하여 cancel이면 프로그램 종료
        if [ $? -eq 1 ]
        then
                break
        fi

        selection=$(cat $ans)
        case $selection in
        1)
                vmlist ;;
        2)
                vmnetlist ;;
        3)
                vmcreation ;;
        4)
                vmremoval ;;
        0)
                break ;;
        *)
                dialog --msgbox "잘못된 번호 선택" 10 40
        esac
done

rm -rf $temp 2> /dev/null
rm -rf $ans 2> /dev/null
rm -rf $image 2> /dev/null
rm -rf $vmname 2> /dev/null
rm -rf $flavor 2> /dev/null
rm -rf $rmfile 2> /dev/null
rm -rf $rmnamefile 2> /dev/null
